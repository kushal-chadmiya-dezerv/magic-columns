/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/@hookstate/core/dist/index.es.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StateFragment: function() { return /* binding */ StateFragment; },\n/* harmony export */   __state: function() { return /* binding */ __state; },\n/* harmony export */   configure: function() { return /* binding */ configure; },\n/* harmony export */   destroy: function() { return /* binding */ destroy; },\n/* harmony export */   extend: function() { return /* binding */ extend; },\n/* harmony export */   hookstate: function() { return /* binding */ hookstate; },\n/* harmony export */   hookstateMemo: function() { return /* binding */ hookstateMemo; },\n/* harmony export */   isHookstate: function() { return /* binding */ isHookstate; },\n/* harmony export */   isHookstateValue: function() { return /* binding */ isHookstateValue; },\n/* harmony export */   none: function() { return /* binding */ none; },\n/* harmony export */   suspend: function() { return /* binding */ suspend; },\n/* harmony export */   useHookstate: function() { return /* binding */ useHookstate; },\n/* harmony export */   useHookstateCallback: function() { return /* binding */ useHookstateCallback; },\n/* harmony export */   useHookstateEffect: function() { return /* binding */ useHookstateEffect; },\n/* harmony export */   useHookstateImperativeHandle: function() { return /* binding */ useHookstateImperativeHandle; },\n/* harmony export */   useHookstateInsertionEffect: function() { return /* binding */ useHookstateInsertionEffect; },\n/* harmony export */   useHookstateLayoutEffect: function() { return /* binding */ useHookstateLayoutEffect; },\n/* harmony export */   useHookstateMemo: function() { return /* binding */ useHookstateMemo; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\n * Copied from fbjs is-shallow-equal\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n    // SameValue algorithm\n    if (x === y) { // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        // Added the nonzero y check to make Flow happy, but it is redundant\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    }\n    else {\n        // Step 6.a: NaN == NaN\n        return x !== x && y !== y;\n    }\n}\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n    if (is(objA, objB)) {\n        return true;\n    }\n    if (typeof objA !== 'object' || objA === null ||\n        typeof objB !== 'object' || objB === null) {\n        return false;\n    }\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var i = 0; i < keysA.length; i++) {\n        if (!hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Special symbol which might be used to delete properties\n * from an object calling [State.set](#set) or [State.merge](#merge).\n *\n * [Learn more...](https://hookstate.js.org/docs/nested-state#deleting-existing-element)\n */\nvar none = Symbol('none');\n// type PickByType<T, U, B = false> = Pick<T, KeysOfType<T, U, B>>;\n/**\n * A symbol which is used for type inference marking.\n *\n * @hidden\n * @ignore\n */\nvar __state = Symbol('__state');\nfunction hookstate(initial, extension) {\n    var store = createStore(initial);\n    store.activate(extension);\n    var methods = store.toMethods();\n    return methods.self();\n}\n/**\n * A method to destroy a global state and resources allocated by the extensions\n */\nfunction destroy(state) {\n    state[self].deactivate();\n}\n/**\n * A method to check if a variable is an instance of Hookstate State\n */\nfunction isHookstate(v) {\n    return !!(v === null || v === void 0 ? void 0 : v[self]);\n}\n/**\n * A method to check if a variable is an instance of traced (wrapped in a proxy) Hookstate Value\n */\nfunction isHookstateValue(v) {\n    return !!(v === null || v === void 0 ? void 0 : v[SelfMethodsID]);\n}\n/**\n * A function combines multiple extensions into one extension and returns it\n * Browse an example [here](https://hookstate.js.org/docs/extensions-snapshotable)\n */\nfunction extend(e1, e2, e3, e4, e5) {\n    function extended(extensions) {\n        var exts = extensions.map(function (i) { return i(); });\n        var onInitCbs = exts.map(function (i) { return i.onInit; }).filter(function (i) { return i; });\n        var onPremergeCbs = exts.map(function (i) { return i.onPremerge; }).filter(function (i) { return i; });\n        var onPresetCbs = exts.map(function (i) { return i.onPreset; }).filter(function (i) { return i; });\n        var onSetCbs = exts.map(function (i) { return i.onSet; }).filter(function (i) { return i; });\n        var onDestroyCbs = exts.map(function (i) { return i.onDestroy; }).filter(function (i) { return i; });\n        var result = {\n            onCreate: function (instanceFactory, combinedMethods) {\n                for (var _i = 0, exts_1 = exts; _i < exts_1.length; _i++) {\n                    var ext = exts_1[_i];\n                    if (ext.onCreate) {\n                        var extMethods = ext.onCreate(instanceFactory, combinedMethods);\n                        Object.assign(combinedMethods, extMethods);\n                    }\n                }\n                return combinedMethods;\n            }\n        };\n        if (onInitCbs.length > 0) {\n            result.onInit = function (s, e) {\n                for (var _i = 0, onInitCbs_1 = onInitCbs; _i < onInitCbs_1.length; _i++) {\n                    var cb = onInitCbs_1[_i];\n                    cb(s, e);\n                }\n            };\n        }\n        if (onPremergeCbs.length > 0) {\n            result.onPremerge = function (s, d, r) {\n                for (var _i = 0, onPremergeCbs_1 = onPremergeCbs; _i < onPremergeCbs_1.length; _i++) {\n                    var cb = onPremergeCbs_1[_i];\n                    cb(s, d, r);\n                }\n            };\n        }\n        if (onPresetCbs.length > 0) {\n            result.onPreset = function (s, d, r) {\n                for (var _i = 0, onPresetCbs_1 = onPresetCbs; _i < onPresetCbs_1.length; _i++) {\n                    var cb = onPresetCbs_1[_i];\n                    cb(s, d, r);\n                }\n            };\n        }\n        if (onSetCbs.length > 0) {\n            result.onSet = function (s, d, r) {\n                for (var _i = 0, onSetCbs_1 = onSetCbs; _i < onSetCbs_1.length; _i++) {\n                    var cb = onSetCbs_1[_i];\n                    cb(s, d, r);\n                }\n            };\n        }\n        if (onDestroyCbs.length > 0) {\n            result.onDestroy = function (s) {\n                for (var _i = 0, onDestroyCbs_1 = onDestroyCbs; _i < onDestroyCbs_1.length; _i++) {\n                    var cb = onDestroyCbs_1[_i];\n                    cb(s);\n                }\n            };\n        }\n        return result;\n    }\n    return function () { return extended([e1, e2, e3, e4, e5].filter(function (i) { return i; })); };\n}\nfunction useHookstate(source, extension) {\n    var parentMethods = Object(source) === source ?\n        source[self] :\n        undefined;\n    if (parentMethods) {\n        if (parentMethods.isMounted) {\n            // Scoped state mount\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            var initializer = function () {\n                // warning: this is called twice in react strict mode\n                var store = parentMethods.store;\n                var onSetUsedCallback = function () { return setValue_1({\n                    store: store,\n                    state: state,\n                    source: value_1.source,\n                    parentMethods: parentMethods\n                }); };\n                var state = new StateMethodsImpl(store, parentMethods.path, store.get(parentMethods.path), store.edition, onSetUsedCallback);\n                return {\n                    store: store,\n                    state: state,\n                    source: source,\n                    parentMethods: parentMethods\n                };\n            };\n            var _a = react__WEBPACK_IMPORTED_MODULE_0___default().useState(initializer), value_1 = _a[0], setValue_1 = _a[1];\n            if (value_1.store !== parentMethods.store || !('source' in value_1)) {\n                value_1.state.onUnmount();\n                value_1.parentMethods.unsubscribe(value_1.state);\n                value_1 = initializer();\n            }\n            // TODO move to a class hide props on prototype level\n            // hide props from development tools\n            Object.defineProperty(value_1, 'store', { enumerable: false });\n            Object.defineProperty(value_1, 'state', { enumerable: false });\n            Object.defineProperty(value_1, 'source', { enumerable: false });\n            Object.defineProperty(value_1, 'parentMethods', { enumerable: false });\n            value_1.state.reconstruct(parentMethods.path, value_1.store.get(parentMethods.path), value_1.store.edition, \n            // parent state object has changed its reference object\n            // so the scopped state should change too\n            value_1.source !== source);\n            value_1.source = source;\n            // need to subscribe in sync mode, because\n            // safari delays calling the effect giving priority to timeouts and network events,\n            // which can cause the state update\n            parentMethods.subscribe(value_1.state); // no-op if already subscribed\n            useIsomorphicLayoutEffect(function () {\n                // warning: in strict mode, effect is called twice\n                // so need to restore subscription and reconstruct the extension\n                // after the first effect unmount callback\n                value_1.state.onMount(); // no-op if already mounted\n                parentMethods.subscribe(value_1.state); // no-op if already subscribed\n                return function () {\n                    value_1.state.onUnmount();\n                    parentMethods.unsubscribe(value_1.state);\n                };\n            }, []);\n            var state = value_1.state.self();\n            // expose property in development tools\n            value_1['[hookstate(scoped)]'] = state; // TODO use label here, add core extension to label states\n            return state;\n        }\n        else {\n            // Global state mount or destroyed link\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            var initializer = function () {\n                // warning: this is called twice in react strict mode\n                var store = parentMethods.store;\n                var onSetUsedCallback = function () { return value_2.state.isMounted && setValue_2({\n                    store: store,\n                    state: state,\n                    source: value_2.source // mutable, get the latest from value\n                }); };\n                var state = new StateMethodsImpl(store, RootPath, store.get(RootPath), store.edition, onSetUsedCallback);\n                return {\n                    store: store,\n                    state: state,\n                    source: source\n                };\n            };\n            var _b = react__WEBPACK_IMPORTED_MODULE_0___default().useState(initializer), value_2 = _b[0], setValue_2 = _b[1];\n            if (value_2.store !== parentMethods.store || !('source' in value_2)) {\n                value_2.state.onUnmount();\n                value_2.store.unsubscribe(value_2.state);\n                value_2 = initializer();\n            }\n            // hide props from development tools\n            Object.defineProperty(value_2, 'store', { enumerable: false });\n            Object.defineProperty(value_2, 'state', { enumerable: false });\n            Object.defineProperty(value_2, 'source', { enumerable: false });\n            value_2.state.reconstruct(RootPath, value_2.store.get(RootPath), value_2.store.edition, \n            // parent state object has changed its reference object\n            // so the scopped state should change too\n            value_2.source !== source);\n            value_2.source = source;\n            // need to subscribe in sync mode, because\n            // safari delays calling the effect giving priority to timeouts and network events,\n            // which can cause the state update\n            value_2.store.subscribe(value_2.state); // no-op if already subscribed\n            useIsomorphicLayoutEffect(function () {\n                // warning: in strict mode, effect is called twice\n                // so need to restore subscription and reconstruct the extension\n                // after the first effect unmount callback\n                value_2.state.onMount(); // no-op if already mounted\n                value_2.store.subscribe(value_2.state); // no-op if already subscribed\n                return function () {\n                    value_2.state.onUnmount();\n                    value_2.store.unsubscribe(value_2.state);\n                };\n            }, []);\n            var state = value_2.state.self();\n            for (var ind = 0; ind < parentMethods.path.length; ind += 1) {\n                state = state.nested(parentMethods.path[ind]);\n            }\n            // expose property in development tools\n            value_2['[hookstate(global)]'] = state; // TODO use label here, add core extension to label states\n            return state;\n        }\n    }\n    else {\n        // Local state mount\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var initializer = function () {\n            // warning: this is called twice in react strict mode\n            var store = createStore(source);\n            var onSetUsedCallback = function () { return value_3.state.isMounted && setValue_3({\n                store: store,\n                state: state,\n            }); };\n            var state = new StateMethodsImpl(store, RootPath, store.get(RootPath), store.edition, onSetUsedCallback);\n            return {\n                store: store,\n                state: state\n            };\n        };\n        var _c = react__WEBPACK_IMPORTED_MODULE_0___default().useState(initializer), value_3 = _c[0], setValue_3 = _c[1];\n        if ('source' in value_3) {\n            value_3.state.onUnmount();\n            value_3.store.unsubscribe(value_3.state);\n            value_3.store.deactivate();\n            value_3 = initializer();\n        }\n        // hide props from development tools\n        Object.defineProperty(value_3, 'store', { enumerable: false });\n        Object.defineProperty(value_3, 'state', { enumerable: false });\n        value_3.state.reconstruct(RootPath, value_3.store.get(RootPath), value_3.store.edition, false);\n        // need to subscribe in sync mode, because\n        // safari delays calling the effect giving priority to timeouts and network events,\n        // which can cause the state update\n        value_3.store.subscribe(value_3.state); // no-op if already subscribed\n        // need to attach the extension straight away\n        // because extension methods are used in render function\n        // and we can not defer it to the effect callback\n        value_3.store.activate(extension); // no-op if already attached\n        useIsomorphicLayoutEffect(function () {\n            // warning: in strict mode, effect is called twice\n            // so need to restore subscription and reconstruct the extension\n            // after the first effect unmount callback\n            value_3.state.onMount(); // no-op if already mounted\n            value_3.store.subscribe(value_3.state); // no-op if already subscribed\n            value_3.store.activate(extension); // no-op if already attached\n            return function () {\n                value_3.state.onUnmount();\n                value_3.store.unsubscribe(value_3.state);\n                value_3.store.deactivate(); // this will destroy the extensions\n            };\n        }, []);\n        var state = value_3.state.self();\n        // expose property in development tools\n        value_3['[hookstate(local)]'] = state; // TODO use label here, add core extension to label states\n        return state;\n    }\n}\nfunction StateFragment(props) {\n    var scoped = useHookstate(props.state, props.extension);\n    return props.suspend && suspend(scoped) || props.children(scoped);\n}\n/**\n * If state is promised, then it returns a component which integrates with React 18 Suspend feature automatically.\n * Note, that React 18 Suspend support for data loading is still experimental,\n * but it worked as per our experiments and testing.\n */\nfunction suspend(state) {\n    var p = state.promise;\n    return p && react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0___default().lazy(function () { return p; }));\n}\n///\n/// INTERNAL SYMBOLS (LIBRARY IMPLEMENTATION)\n///\nvar self = Symbol('self');\nvar ErrorId;\n(function (ErrorId) {\n    ErrorId[ErrorId[\"StateUsedInDependencyList\"] = 100] = \"StateUsedInDependencyList\";\n    ErrorId[ErrorId[\"InitStateToValueFromState\"] = 101] = \"InitStateToValueFromState\";\n    ErrorId[ErrorId[\"SetStateToValueFromState\"] = 102] = \"SetStateToValueFromState\";\n    ErrorId[ErrorId[\"GetStateWhenPromised\"] = 103] = \"GetStateWhenPromised\";\n    ErrorId[ErrorId[\"SetStateWhenPromised\"] = 104] = \"SetStateWhenPromised\";\n    ErrorId[ErrorId[\"SetStateNestedToPromised\"] = 105] = \"SetStateNestedToPromised\";\n    ErrorId[ErrorId[\"SetStateWhenDestroyed\"] = 106] = \"SetStateWhenDestroyed\";\n    ErrorId[ErrorId[\"ToJson_Value\"] = 108] = \"ToJson_Value\";\n    ErrorId[ErrorId[\"ToJson_State\"] = 109] = \"ToJson_State\";\n    ErrorId[ErrorId[\"GetProperty_Function\"] = 110] = \"GetProperty_Function\";\n    ErrorId[ErrorId[\"InitStateStoreSwitchover\"] = 111] = \"InitStateStoreSwitchover\";\n    ErrorId[ErrorId[\"GetUnknownPlugin\"] = 120] = \"GetUnknownPlugin\";\n    ErrorId[ErrorId[\"SetProperty_State\"] = 201] = \"SetProperty_State\";\n    ErrorId[ErrorId[\"SetProperty_Value\"] = 202] = \"SetProperty_Value\";\n    ErrorId[ErrorId[\"SetPrototypeOf_State\"] = 203] = \"SetPrototypeOf_State\";\n    ErrorId[ErrorId[\"SetPrototypeOf_Value\"] = 204] = \"SetPrototypeOf_Value\";\n    ErrorId[ErrorId[\"PreventExtensions_State\"] = 205] = \"PreventExtensions_State\";\n    ErrorId[ErrorId[\"PreventExtensions_Value\"] = 206] = \"PreventExtensions_Value\";\n    ErrorId[ErrorId[\"DefineProperty_State\"] = 207] = \"DefineProperty_State\";\n    ErrorId[ErrorId[\"DefineProperty_Value\"] = 208] = \"DefineProperty_Value\";\n    ErrorId[ErrorId[\"DeleteProperty_State\"] = 209] = \"DeleteProperty_State\";\n    ErrorId[ErrorId[\"DeleteProperty_Value\"] = 210] = \"DeleteProperty_Value\";\n    ErrorId[ErrorId[\"Construct_State\"] = 211] = \"Construct_State\";\n    ErrorId[ErrorId[\"Construct_Value\"] = 212] = \"Construct_Value\";\n    ErrorId[ErrorId[\"Apply_State\"] = 213] = \"Apply_State\";\n    ErrorId[ErrorId[\"Apply_Value\"] = 214] = \"Apply_Value\";\n})(ErrorId || (ErrorId = {}));\nvar StateInvalidUsageError = /** @class */ (function (_super) {\n    __extends(StateInvalidUsageError, _super);\n    function StateInvalidUsageError(path, id, details) {\n        return _super.call(this, \"Error: HOOKSTATE-\".concat(id, \" [path: /\").concat(path.join('/')).concat(details ? \", details: \".concat(details) : '', \"]. \") +\n            \"See https://hookstate.js.org/docs/exceptions#hookstate-\".concat(id)) || this;\n    }\n    return StateInvalidUsageError;\n}(Error));\nvar SelfMethodsID = Symbol('ProxyMarker');\nvar RootPath = [];\nvar Store = /** @class */ (function () {\n    function Store(_value) {\n        var _this = this;\n        this._value = _value;\n        // > 0 means active store, < 0 means destroyed\n        // please note, in react strict mode and hot reload cases\n        // state can be reused, so we should support store resurection\n        this.edition = 1;\n        this._subscribers = new Set();\n        if (Object(_value) === _value &&\n            configuration.promiseDetector(_value)) {\n            this.setPromised(_value);\n        }\n        else if (_value === none) {\n            this.setPromised(undefined);\n        }\n        var onSetUsedStoreStateMethods = function () {\n            _this._stateMethods.reconstruct(RootPath, _this.get(RootPath), _this.edition, false);\n        };\n        onSetUsedStoreStateMethods[IsUnmounted] = true;\n        this._stateMethods = new StateMethodsImpl(this, RootPath, this.get(RootPath), this.edition, onSetUsedStoreStateMethods);\n        this.subscribe(this._stateMethods);\n    }\n    Store.prototype.setPromised = function (promise) {\n        var _this = this;\n        this._value = none;\n        this._promiseError = undefined;\n        this._promiseResolver = undefined;\n        if (!promise) {\n            this._promise = new Promise(function (resolve) {\n                _this._promiseResolver = resolve;\n            });\n            return;\n        }\n        promise = promise\n            .then(function (r) {\n            if (_this._promise === promise) {\n                _this._promise = undefined;\n                _this._promiseError = undefined;\n                _this._promiseResolver === undefined;\n                _this.update(_this._stateMethods.self(), _this.set(RootPath, r));\n            }\n        })\n            .catch(function (err) {\n            if (_this._promise === promise) {\n                _this._promise = undefined;\n                _this._promiseResolver = undefined;\n                _this._promiseError = err;\n                _this.edition += 1;\n                var ad = { path: RootPath };\n                _this.update(_this._stateMethods.self(), ad);\n            }\n        });\n        this._promise = promise;\n    };\n    Store.prototype.activate = function (extensionFactory) {\n        var _a, _b, _c, _d;\n        if (this.edition < 0) {\n            this.edition = -this.edition;\n        }\n        if (this._extension === undefined) {\n            this._extension = extensionFactory === null || extensionFactory === void 0 ? void 0 : extensionFactory();\n            this._extensionMethods = (_b = (_a = this._extension) === null || _a === void 0 ? void 0 : _a.onCreate) === null || _b === void 0 ? void 0 : _b.call(_a, this._stateMethods.self(), {});\n            // this is invoked with all extension methods activated on the state\n            (_d = (_c = this._extension) === null || _c === void 0 ? void 0 : _c.onInit) === null || _d === void 0 ? void 0 : _d.call(_c, this._stateMethods.self(), this._extensionMethods || {});\n        }\n    };\n    Store.prototype.deactivate = function () {\n        var _a, _b;\n        if (this._extension) {\n            (_b = (_a = this._extension).onDestroy) === null || _b === void 0 ? void 0 : _b.call(_a, this._stateMethods.self());\n            delete this._extension;\n            delete this._extensionMethods;\n        }\n        if (this.edition > 0) {\n            this.edition = -this.edition;\n        }\n    };\n    Object.defineProperty(Store.prototype, \"extension\", {\n        get: function () {\n            return this._extensionMethods;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Store.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Store.prototype, \"promiseError\", {\n        get: function () {\n            return this._promiseError;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Store.prototype.get = function (path) {\n        var result = this._value;\n        if (result === none) {\n            return result;\n        }\n        path.forEach(function (p) {\n            result = result[p];\n        });\n        return result;\n    };\n    Store.prototype.set = function (path, value) {\n        var _a, _b;\n        if (path.length === 0) {\n            // Root value UPDATE case,\n            if (value === none) {\n                this.setPromised(undefined);\n            }\n            else if (Object(value) === value && configuration.promiseDetector(value)) {\n                this.setPromised(value);\n                value = none;\n            }\n            else if (this._promise && !this._promiseResolver) {\n                throw new StateInvalidUsageError(path, ErrorId.SetStateWhenPromised);\n            }\n            else {\n                this._promiseError = undefined;\n            }\n            var prevValue = this._value;\n            this._value = value;\n            this.afterSet();\n            if (prevValue === none && this._value !== none && this._promiseResolver) {\n                this._promise = undefined;\n                this._promiseError = undefined;\n                var resolver = this._promiseResolver;\n                this._promiseResolver === undefined;\n                resolver(this._value);\n            }\n            return {\n                path: path\n            };\n        }\n        if (Object(value) === value && configuration.promiseDetector(value)) {\n            // TODO this one still can get into the state as nested property, need to check on read instead\n            throw new StateInvalidUsageError(path, ErrorId.SetStateNestedToPromised);\n        }\n        var target = this._value;\n        for (var i = 0; i < path.length - 1; i += 1) {\n            target = target[path[i]];\n        }\n        var p = path[path.length - 1];\n        if (p in target) {\n            if (value !== none) {\n                // Property UPDATE case\n                target[p] = value;\n                this.afterSet();\n                return {\n                    path: path\n                };\n            }\n            else {\n                // Property DELETE case\n                if (Array.isArray(target) && typeof p === 'number') {\n                    target.splice(p, 1);\n                }\n                else {\n                    delete target[p];\n                }\n                this.afterSet();\n                // if an array of objects is about to loose existing property\n                // we consider it is the whole object is changed\n                // which is identified by upper path\n                return {\n                    path: path.slice(0, -1),\n                    actions: (_a = {}, _a[p] = \"D\", _a)\n                };\n            }\n        }\n        if (value !== none) {\n            // Property INSERT case\n            target[p] = value;\n            this.afterSet();\n            // if an array of objects is about to be extended by new property\n            // we consider it is the whole object is changed\n            // which is identified by upper path\n            return {\n                path: path.slice(0, -1),\n                actions: (_b = {}, _b[p] = \"I\", _b)\n            };\n        }\n        // Non-existing property DELETE case\n        // no-op\n        return {\n            path: path\n        };\n    };\n    Store.prototype.preset = function (state, value) {\n        var _a, _b;\n        (_b = (_a = this._extension) === null || _a === void 0 ? void 0 : _a.onPreset) === null || _b === void 0 ? void 0 : _b.call(_a, state, value, this._stateMethods.self());\n    };\n    Store.prototype.premerge = function (state, value) {\n        var _a, _b;\n        (_b = (_a = this._extension) === null || _a === void 0 ? void 0 : _a.onPremerge) === null || _b === void 0 ? void 0 : _b.call(_a, state, value, this._stateMethods.self());\n    };\n    Store.prototype.update = function (state, ad) {\n        var _this = this;\n        var _a, _b;\n        (_b = (_a = this._extension) === null || _a === void 0 ? void 0 : _a.onSet) === null || _b === void 0 ? void 0 : _b.call(_a, state, ad, this._stateMethods.self());\n        var actions = new Set();\n        // check if actions descriptor can be unfolded into a number of individual update actions\n        // this is the case when merge call swaps to properties for example\n        // so we optimize rerendering only these properties\n        if (ad.actions && Object.values(ad.actions).findIndex(function (i) { return i !== \"U\"; }) === -1) {\n            // all actions are update actions\n            Object.keys(ad.actions).forEach(function (key) {\n                _this._subscribers.forEach(function (s) { return s.onSet({ path: ad.path.concat(key) }, actions); });\n            });\n        }\n        else {\n            this._subscribers.forEach(function (s) { return s.onSet(ad, actions); });\n        }\n        actions.forEach(function (a) { return a(); });\n    };\n    Store.prototype.afterSet = function () {\n        if (this.edition > 0) {\n            this.edition += 1;\n        }\n        if (this.edition < 0) {\n            this.edition -= 1;\n        }\n    };\n    Store.prototype.toMethods = function () {\n        return this._stateMethods;\n    };\n    Store.prototype.subscribe = function (l) {\n        this._subscribers.add(l);\n    };\n    Store.prototype.unsubscribe = function (l) {\n        this._subscribers.delete(l);\n    };\n    Store.prototype.toJSON = function () {\n        throw new StateInvalidUsageError(RootPath, ErrorId.ToJson_Value);\n    };\n    return Store;\n}());\n// use symbol property to allow for easier reference finding\nvar UnusedValue = Symbol('UnusedValue');\n// use symbol to mark that a function has no effect anymore\nvar IsUnmounted = Symbol('IsUnmounted');\nvar StateMethodsImpl = /** @class */ (function () {\n    function StateMethodsImpl(store, path, valueSource, valueEdition, onSetUsed) {\n        this.store = store;\n        this.path = path;\n        this.valueSource = valueSource;\n        this.valueEdition = valueEdition;\n        this.onSetUsed = onSetUsed;\n        this.valueUsed = UnusedValue;\n    }\n    Object.defineProperty(StateMethodsImpl.prototype, __state, {\n        get: function () {\n            return [this.get(), this.self()];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StateMethodsImpl.prototype.reconstruct = function (path, valueSource, valueEdition, reset) {\n        this.path = path;\n        this.valueSource = valueSource;\n        this.valueEdition = valueEdition;\n        this.valueUsed = UnusedValue;\n        if (reset) {\n            delete this.selfUsed;\n            delete this.childrenCreated;\n            delete this.childrenUsedPrevious;\n        }\n        else {\n            this.valueUsedNoProxyPrevious = this.valueUsedNoProxy;\n            this.childrenUsedPrevious = this.childrenUsed;\n        }\n        delete this.valueUsedNoProxy;\n        delete this.childrenUsed;\n        // We should not delete subscribers as these are self cleaned up when unmounted\n        // Theoretically it is possible to reconnect subscribers like we done it for \n        // children, but it is easier and more efficient to leave subscribers to have independent lifecycle\n        // If we delete subscribers here, scoped states wrapped in React.memo\n        // will lose state change propagation and rerendering for scopped states\n        // delete this.subscribers;\n    };\n    StateMethodsImpl.prototype.reconnect = function () {\n        // Mark it's as used, because it is used in a dependency list\n        // (we are making it's value used implicitly, so rerender is triggered).\n        // Otherwise, no rerender => no effects running, even when a value is changed.\n        // This is marking the state used a bit more than it might be really used\n        // in the effect callback. More optimized / precise implementation would be\n        // to remember useSelf as previous (similar to childrenUsed),\n        // but it is a lot more complicated and the benefit is not worth the complexity.\n        // So, mark it used.\n        // We also using it without proxy if it wass used without proxy during the\n        // previous render, because otherwise children usage might be not traced completely\n        // and so will not result in renreder if children are updated.\n        // This is covered by some tests, but there are so many possible corner cases...\n        this.get({ __internalAllowPromised: true, noproxy: this.valueUsedNoProxyPrevious });\n        this.childrenUsed = __assign(__assign({}, this.childrenUsedPrevious), this.childrenUsed);\n    };\n    StateMethodsImpl.prototype.getUntracked = function (__internalAllowPromised) {\n        if (this.valueEdition !== this.store.edition) {\n            this.valueSource = this.store.get(this.path);\n            this.valueEdition = this.store.edition;\n            if (this.valueUsed !== UnusedValue) {\n                this.valueUsed = UnusedValue;\n                this.get({ __internalAllowPromised: true }); // renew cache to keep it marked used\n            }\n        }\n        if (__internalAllowPromised) {\n            return this.valueSource;\n        }\n        if (this.store.promiseError) {\n            throw this.store.promiseError;\n        }\n        if (this.store.promise) {\n            throw new StateInvalidUsageError(this.path, ErrorId.GetStateWhenPromised);\n        }\n        return this.valueSource;\n    };\n    StateMethodsImpl.prototype.get = function (options) {\n        var _a;\n        var valueSource = this.getUntracked(options === null || options === void 0 ? void 0 : options.__internalAllowPromised);\n        if (options === null || options === void 0 ? void 0 : options.stealth) {\n            return valueSource;\n        }\n        if (this.valueUsed === UnusedValue) {\n            if (Array.isArray(valueSource)) {\n                this.valueUsed = this.valueArrayImpl(valueSource);\n            }\n            else if (Object(valueSource) === valueSource) {\n                if (((_a = valueSource.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"Object\") {\n                    this.valueUsed = this.valueObjectImpl(valueSource);\n                }\n                else {\n                    // any other object except Object, for example Date\n                    this.valueUsedNoProxy = true;\n                    this.valueUsed = valueSource;\n                }\n            }\n            else {\n                this.valueUsed = valueSource;\n            }\n        }\n        if (options === null || options === void 0 ? void 0 : options.noproxy) {\n            this.valueUsedNoProxy = true;\n            return valueSource;\n        }\n        return this.valueUsed;\n    };\n    Object.defineProperty(StateMethodsImpl.prototype, \"value\", {\n        get: function () {\n            // various tools, including react dev tools and webpack import\n            // inspect an object and it's properties\n            // so these should not throw\n            // return this.get({ __internalAllowPromised: true })\n            return this.get();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StateMethodsImpl.prototype.setUntrackedV4 = function (newValue) {\n        if (typeof newValue === 'function') {\n            newValue = newValue(this.getUntracked());\n        }\n        this.store.preset(this.self(), newValue);\n        if (Object(newValue) === newValue && newValue[SelfMethodsID]) {\n            // TODO check on read instead as it might escape as nested on set anyway\n            throw new StateInvalidUsageError(this.path, ErrorId.SetStateToValueFromState);\n        }\n        if (newValue !== Object(newValue) && newValue === this.getUntracked(true)) {\n            // this is primitive value and has not changed\n            // so skip this set call as it does not make an effect\n            return null;\n        }\n        return this.store.set(this.path, newValue);\n    };\n    StateMethodsImpl.prototype.set = function (newValue) {\n        var ad = this.setUntrackedV4(newValue);\n        if (ad) {\n            this.store.update(this.self(), ad);\n        }\n    };\n    StateMethodsImpl.prototype.mergeUntracked = function (sourceValue) {\n        var r = this.mergeUntrackedV4(sourceValue);\n        if (r) {\n            return [r.path];\n        }\n        return [];\n    };\n    StateMethodsImpl.prototype.mergeUntrackedV4 = function (sourceValue) {\n        var currentValue = this.getUntracked();\n        if (typeof sourceValue === 'function') {\n            sourceValue = sourceValue(currentValue);\n        }\n        this.store.premerge(this.self(), sourceValue);\n        if (Array.isArray(currentValue)) {\n            if (Array.isArray(sourceValue)) {\n                var ad_1 = { path: this.path, actions: {} };\n                sourceValue.forEach(function (e, i) {\n                    ad_1.actions[currentValue.push(e) - 1] = \"I\";\n                });\n                if (Object.keys(ad_1.actions).length > 0) {\n                    this.setUntrackedV4(currentValue);\n                    return ad_1;\n                }\n                return null;\n            }\n            else {\n                var ad_2 = { path: this.path, actions: {} };\n                var deletedIndexes_1 = [];\n                Object.keys(sourceValue)\n                    .map(function (i) { return Number(i); })\n                    .sort(function (a, b) { return a - b; })\n                    .forEach(function (i) {\n                    var index = Number(i);\n                    var newPropValue = sourceValue[index];\n                    if (newPropValue === none) {\n                        ad_2.actions[index] = \"D\";\n                        deletedIndexes_1.push(index);\n                    }\n                    else {\n                        if (index in currentValue) {\n                            ad_2.actions[index] = \"U\";\n                        }\n                        else {\n                            ad_2.actions[index] = \"I\";\n                        }\n                        currentValue[index] = newPropValue;\n                    }\n                });\n                // indexes are ascending sorted as per above\n                // so, delete one by one from the end\n                // this way index positions do not change\n                deletedIndexes_1.reverse().forEach(function (p) {\n                    currentValue.splice(p, 1);\n                });\n                if (Object.keys(ad_2.actions).length > 0) {\n                    this.setUntrackedV4(currentValue);\n                    return ad_2;\n                }\n                return null;\n            }\n        }\n        else if (Object(currentValue) === currentValue) {\n            var ad_3 = { path: this.path, actions: {} };\n            Object.keys(sourceValue).forEach(function (key) {\n                var newPropValue = sourceValue[key];\n                if (newPropValue === none) {\n                    ad_3.actions[key] = \"D\";\n                    delete currentValue[key];\n                }\n                else {\n                    if (key in currentValue) {\n                        ad_3.actions[key] = \"U\";\n                    }\n                    else {\n                        ad_3.actions[key] = \"I\";\n                    }\n                    currentValue[key] = newPropValue;\n                }\n            });\n            if (Object.keys(ad_3.actions).length > 0) {\n                this.setUntrackedV4(currentValue);\n                return ad_3;\n            }\n            return null;\n        }\n        else if (typeof currentValue === 'string') {\n            return this.setUntrackedV4((currentValue + String(sourceValue)));\n        }\n        else {\n            return this.setUntrackedV4(sourceValue);\n        }\n    };\n    StateMethodsImpl.prototype.merge = function (sourceValue) {\n        var r = this.mergeUntrackedV4(sourceValue);\n        if (r) {\n            this.store.update(this.self(), r);\n        }\n    };\n    StateMethodsImpl.prototype.nested = function (key) {\n        return this.child(key).self();\n    };\n    StateMethodsImpl.prototype.rerender = function (paths) {\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n            var path = paths_1[_i];\n            this.store.update(this.self(), { path: path });\n        }\n    };\n    StateMethodsImpl.prototype.activate = function (extensionFactory) {\n        this.store.activate(extensionFactory);\n    };\n    StateMethodsImpl.prototype.deactivate = function () {\n        this.store.deactivate();\n    };\n    StateMethodsImpl.prototype.subscribe = function (l) {\n        if (this.subscribers === undefined) {\n            this.subscribers = new Set();\n        }\n        this.subscribers.add(l);\n    };\n    StateMethodsImpl.prototype.unsubscribe = function (l) {\n        if (this.subscribers) {\n            this.subscribers.delete(l);\n        }\n    };\n    Object.defineProperty(StateMethodsImpl.prototype, \"isMounted\", {\n        get: function () {\n            return !this.onSetUsed[IsUnmounted];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StateMethodsImpl.prototype.onMount = function () {\n        delete this.onSetUsed[IsUnmounted];\n    };\n    StateMethodsImpl.prototype.onUnmount = function () {\n        this.onSetUsed[IsUnmounted] = true;\n    };\n    StateMethodsImpl.prototype.onSet = function (ad, actions) {\n        var _this = this;\n        var update = function () {\n            var _a;\n            var isAffected = false;\n            if (_this.valueUsedNoProxy\n                // TODO this condition becomes redundant when Downgraded plugins is deleted\n                && _this.valueUsed !== UnusedValue) {\n                actions.add(_this.onSetUsed);\n                delete _this.selfUsed;\n                isAffected = true;\n            }\n            var path = ad.path;\n            var nextChildKey = path[_this.path.length];\n            if (nextChildKey === undefined) {\n                // There is no next child to dive into\n                // So it is this one which was updated\n                if (_this.valueUsed !== UnusedValue) {\n                    actions.add(_this.onSetUsed);\n                    delete _this.selfUsed;\n                    delete _this.childrenUsed;\n                    if (ad.actions && _this.childrenCreated) {\n                        // TODO add automated unit tests for this part\n                        if (Array.isArray(_this.valueSource)\n                            && Object.values(ad.actions).includes(\"D\")) {\n                            // this is an array and some elements were removed\n                            // so invalidate cache for all children after the first deleted\n                            var firstDeletedIndex = Object.keys(ad.actions)\n                                .map(function (i) { return Number(i); })\n                                .sort(function (a, b) { return a - b; })\n                                .find(function (i) { var _a; return ((_a = ad.actions) === null || _a === void 0 ? void 0 : _a[i]) === \"D\"; });\n                            for (var childKey in _this.childrenCreated) {\n                                if (Number(childKey) >= firstDeletedIndex ||\n                                    childKey in ad.actions) {\n                                    delete _this.childrenCreated[childKey];\n                                }\n                            }\n                        }\n                        else {\n                            for (var childKey in ad.actions) {\n                                delete _this.childrenCreated[childKey];\n                            }\n                        }\n                    }\n                    else {\n                        delete _this.childrenCreated;\n                    }\n                    return true;\n                }\n            }\n            else {\n                var nextChild = (_a = _this.childrenUsed) === null || _a === void 0 ? void 0 : _a[nextChildKey];\n                if (nextChild && nextChild.onSet(ad, actions)) {\n                    delete _this.selfUsed;\n                    return true;\n                }\n            }\n            return isAffected;\n        };\n        var updated = update();\n        if (!updated && this.subscribers !== undefined) {\n            this.subscribers.forEach(function (s) {\n                if (s.onSet(ad, actions)) {\n                    delete _this.selfUsed;\n                }\n            });\n        }\n        return updated;\n    };\n    Object.defineProperty(StateMethodsImpl.prototype, \"keys\", {\n        get: function () {\n            var value = this.get();\n            if (Array.isArray(value)) {\n                return Object.keys(value).map(function (i) { return Number(i); }).filter(function (i) { return Number.isInteger(i); });\n            }\n            if (Object(value) === value) {\n                return Object.keys(value);\n            }\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StateMethodsImpl.prototype.child = function (key) {\n        this.childrenUsed = this.childrenUsed || {};\n        var cachedChild = this.childrenUsed.hasOwnProperty(key) && this.childrenUsed[key];\n        if (cachedChild) {\n            return cachedChild;\n        }\n        var valueSource = this.valueSource[key];\n        if (typeof valueSource === 'function') {\n            // hitting a method of a custom type, should be no-op\n            throw new StateInvalidUsageError(this.path, ErrorId.GetProperty_Function);\n        }\n        this.childrenCreated = this.childrenCreated || {};\n        var child = this.childrenCreated[key];\n        var r;\n        if (child) {\n            child.reconstruct(this.path.concat(key), valueSource, this.valueEdition, false);\n            r = child;\n        }\n        else {\n            r = new StateMethodsImpl(this.store, this.path.concat(key), valueSource, this.valueEdition, this.onSetUsed);\n            this.childrenCreated[key] = r;\n        }\n        if (this.valueUsedNoProxy) {\n            // TODO this is redundant when Downgraded plugin is deleted\n            r.valueUsedNoProxy = true;\n        }\n        this.childrenUsed[key] = r;\n        return r;\n    };\n    StateMethodsImpl.prototype.valueArrayImpl = function (currentValue) {\n        var _this = this;\n        return proxyWrap(this.path, currentValue, function () { return currentValue; }, function (target, key) {\n            if (key === 'length') {\n                return target.length;\n            }\n            if (key in Array.prototype) {\n                return Array.prototype[key];\n            }\n            if (key === SelfMethodsID) {\n                return _this;\n            }\n            if (typeof key === 'symbol') {\n                // allow clients to associate hidden cache with state values\n                return target[key];\n            }\n            var index = Number(key);\n            if (!Number.isInteger(index)) {\n                return undefined;\n            }\n            return _this.child(index).get();\n        }, function (target, key, value) {\n            if (typeof key === 'symbol') {\n                // allow clients to associate hidden cache with state values\n                target[key] = value;\n                return true;\n            }\n            throw new StateInvalidUsageError(_this.path, ErrorId.SetProperty_Value);\n        }, true);\n    };\n    StateMethodsImpl.prototype.valueObjectImpl = function (currentValue) {\n        var _this = this;\n        return proxyWrap(this.path, currentValue, function () { return currentValue; }, function (target, key) {\n            if (key in Object.prototype) {\n                return Object.prototype[key];\n            }\n            if (key === SelfMethodsID) {\n                return _this;\n            }\n            if (typeof key === 'symbol') {\n                // allow clients to associate hidden cache with state values\n                return target[key];\n            }\n            return _this.child(key).get();\n        }, function (target, key, value) {\n            if (typeof key === 'symbol') {\n                // allow clients to associate hidden cache with state values\n                target[key] = value;\n                return true;\n            }\n            throw new StateInvalidUsageError(_this.path, ErrorId.SetProperty_Value);\n        }, true);\n    };\n    StateMethodsImpl.prototype.self = function () {\n        var _this = this;\n        if (this.selfUsed) {\n            return this.selfUsed;\n        }\n        var getter = function (_, key) {\n            if (key === self) {\n                return _this;\n            }\n            if (typeof key === 'symbol') {\n                return undefined;\n            }\n            if (key === 'toJSON') {\n                throw new StateInvalidUsageError(_this.path, ErrorId.ToJson_State);\n            }\n            var nestedGetter = function (prop) {\n                var currentValue = _this.get({ __internalAllowPromised: prop === '$$typeof' || prop === 'constructor' });\n                if (prop in Object.prototype) {\n                    // Mark it used entirely, so changes to the value\n                    // invalidate and rerender results for Object.prototype.toString(),\n                    // for example.\n                    // We check for Object prototype functions\n                    // even for primitive values, because primitive values still\n                    // can have object methods.\n                    return Object.prototype[prop];\n                }\n                if ( // if currentValue is primitive type\n                (Object(currentValue) !== currentValue) &&\n                    // if promised, it will be none\n                    currentValue !== none) {\n                    // This was an error case, but various tools like webpack bundler\n                    // and react dev tools attempt to get props out of non-null object,\n                    // so this was changed to return just undefined for any property request\n                    // as there is no way to fix 3rd party tools.\n                    // Logging a warning to console is also not an option\n                    // as it pollutes console for legitimate apps on app start app.\n                    // Ref: https://github.com/avkonst/hookstate/issues/125\n                    return undefined;\n                }\n                if (Array.isArray(currentValue)) {\n                    if (prop === 'length') {\n                        return currentValue.length;\n                    }\n                    if (prop in Array.prototype) {\n                        return Array.prototype[prop];\n                    }\n                    var index = Number(prop);\n                    if (!Number.isInteger(index)) {\n                        return undefined;\n                    }\n                    return _this.nested(index);\n                }\n                return _this.nested(prop.toString());\n            };\n            switch (key) {\n                case 'path':\n                    return _this.path;\n                case 'keys':\n                    return _this.keys;\n                case 'value':\n                    return _this.value;\n                case 'ornull':\n                    return _this.ornull;\n                case 'promised':\n                    return _this.promised;\n                case 'promise':\n                    return _this.promise;\n                case 'error':\n                    return _this.error;\n                case 'get':\n                    return function (opts) { return _this.get(opts); };\n                case 'set':\n                    return function (p) { return _this.set(p); };\n                case 'merge':\n                    return function (p) { return _this.merge(p); };\n                case 'nested':\n                    return function (p) { return nestedGetter(p); };\n                default:\n                    // check if extension method\n                    var ext = _this.store.extension;\n                    if (ext && key in ext) {\n                        return ext[key](_this.self());\n                    }\n                    // otherwise nested child\n                    return nestedGetter(key);\n            }\n        };\n        this.selfUsed = proxyWrap(this.path, this.valueSource, function (opts) {\n            return _this.get({ __internalAllowPromised: true, stealth: opts === null || opts === void 0 ? void 0 : opts.stealth });\n        }, getter, function (_, key, value) {\n            throw new StateInvalidUsageError(_this.path, ErrorId.SetProperty_State);\n        }, false);\n        return this.selfUsed;\n    };\n    Object.defineProperty(StateMethodsImpl.prototype, \"promised\", {\n        get: function () {\n            this.get({ __internalAllowPromised: true }); // marks used\n            return !!this.store.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StateMethodsImpl.prototype, \"promise\", {\n        get: function () {\n            var _this = this;\n            var _a;\n            this.get({ __internalAllowPromised: true }); // marks used\n            return (_a = this.store.promise) === null || _a === void 0 ? void 0 : _a.then(function (_) { return _this.self(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StateMethodsImpl.prototype, \"error\", {\n        get: function () {\n            this.get({ __internalAllowPromised: !!this.store.promiseError }); // marks used\n            return this.store.promiseError;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StateMethodsImpl.prototype, \"ornull\", {\n        get: function () {\n            var value = this.get();\n            if (value === null || value === undefined) {\n                return value;\n            }\n            return this.self();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StateMethodsImpl;\n}());\nfunction proxyWrap(path, \n// tslint:disable-next-line: no-any\ntargetBootstrap, \n// tslint:disable-next-line: no-any\ntargetGetter, \n// tslint:disable-next-line: no-any\npropertyGetter, \n// tslint:disable-next-line: no-any\npropertySetter, isValueProxy) {\n    var onInvalidUsage = function (op) {\n        throw new StateInvalidUsageError(path, op);\n    };\n    if (Object(targetBootstrap) !== targetBootstrap) {\n        targetBootstrap = {};\n    }\n    return new Proxy(targetBootstrap, {\n        getPrototypeOf: function (_target) {\n            // should satisfy the invariants:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf#Invariants\n            var targetReal = targetGetter();\n            if (targetReal === undefined || targetReal === null) {\n                return null;\n            }\n            if (targetReal === none) {\n                return Object.getPrototypeOf(new Promise(function () { }));\n            }\n            return Object.getPrototypeOf(targetReal);\n        },\n        setPrototypeOf: function (_target, v) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.SetPrototypeOf_State :\n                ErrorId.SetPrototypeOf_Value);\n        },\n        isExtensible: function (_target) {\n            // should satisfy the invariants:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible#Invariants\n            return true; // required to satisfy the invariants of the getPrototypeOf\n            // return Object.isExtensible(target);\n        },\n        preventExtensions: function (_target) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.PreventExtensions_State :\n                ErrorId.PreventExtensions_Value);\n        },\n        getOwnPropertyDescriptor: function (_target, p) {\n            var targetReal = targetGetter();\n            if (Object(targetReal) === targetReal) {\n                var origin_1 = Object.getOwnPropertyDescriptor(targetReal, p);\n                if (Array.isArray(targetReal) && p in Array.prototype) {\n                    return origin_1;\n                }\n                return origin_1 && {\n                    // should be configurable as may not exist on proxy target\n                    configurable: true,\n                    enumerable: origin_1.enumerable,\n                    get: function () { return propertyGetter(targetReal, p); },\n                    set: undefined\n                };\n            }\n            if (isValueProxy || targetReal === none) {\n                return undefined;\n            }\n            if (p === 'value') {\n                return {\n                    // should be configurable as does not exist on proxy target\n                    configurable: true,\n                    enumerable: true,\n                    get: function () { return targetGetter({ stealth: true }); },\n                    set: undefined\n                };\n            }\n            if (p === 'path') {\n                return {\n                    // should be configurable as does not exist on proxy target\n                    configurable: true,\n                    enumerable: true,\n                    get: function () { return path; },\n                    set: undefined\n                };\n            }\n            return undefined;\n        },\n        has: function (_target, p) {\n            if (typeof p === 'symbol') {\n                return false;\n            }\n            var targetReal = targetGetter();\n            if (Object(targetReal) === targetReal) {\n                return p in targetReal;\n            }\n            if (isValueProxy || targetReal === none) {\n                return false;\n            }\n            return p === 'value' || p === 'path';\n        },\n        get: propertyGetter,\n        set: propertySetter,\n        deleteProperty: function (_target, p) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.DeleteProperty_State :\n                ErrorId.DeleteProperty_Value);\n        },\n        defineProperty: function (_target, p, attributes) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.DefineProperty_State :\n                ErrorId.DefineProperty_Value);\n        },\n        ownKeys: function (_target) {\n            var targetReal = targetGetter();\n            if (Array.isArray(targetReal)) {\n                if (_target.length === undefined) {\n                    // an object turned into an array now\n                    // inject length property now as it is defined on the array\n                    // to enable getOwnPropertyDescriptor for length not throw\n                    Object.defineProperty(targetBootstrap, 'length', {\n                        value: 0, writable: true, enumerable: false, configurable: false\n                    });\n                }\n            }\n            if (Object(targetReal) === targetReal) {\n                return Object.getOwnPropertyNames(targetReal);\n            }\n            if (isValueProxy || targetReal === none) {\n                return [];\n            }\n            return ['value', 'path'];\n        },\n        apply: function (_target, thisArg, argArray) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.Apply_State :\n                ErrorId.Apply_Value);\n        },\n        construct: function (_target, argArray, newTarget) {\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.Construct_State :\n                ErrorId.Construct_Value);\n        }\n    });\n}\nfunction createStore(initial) {\n    var initialValue = initial;\n    if (typeof initial === 'function') {\n        initialValue = initial();\n    }\n    if (Object(initialValue) === initialValue && initialValue[SelfMethodsID]) {\n        throw new StateInvalidUsageError(RootPath, ErrorId.InitStateToValueFromState);\n    }\n    return new Store(initialValue);\n}\nvar configuration = {\n    interceptDependencyListsMode: 'always',\n    isDevelopmentMode: typeof process === 'object' &&\n        typeof process.env === 'object' &&\n        \"development\" === 'development',\n    promiseDetector: function (p) { return Promise.resolve(p) === p; },\n    hiddenInterceptDependencyListsModeDebug: false\n};\n/**\n * Configures Hookstate behavior globally. This is for special cases only, when default\n * heuristics fail to work in a specific environment.\n *\n * @param config\n */\nfunction configure(config) {\n    var _a, _b, _c;\n    configuration = {\n        interceptDependencyListsMode: (_a = config.interceptDependencyListsMode) !== null && _a !== void 0 ? _a : configuration.interceptDependencyListsMode,\n        isDevelopmentMode: (_b = config.isDevelopmentMode) !== null && _b !== void 0 ? _b : configuration.isDevelopmentMode,\n        promiseDetector: (_c = config.promiseDetector) !== null && _c !== void 0 ? _c : configuration.promiseDetector,\n        hiddenInterceptDependencyListsModeDebug: false\n    };\n    interceptReactHooks(); // not really required, but for safety\n    if (configuration.interceptDependencyListsMode === 'never') {\n        configuration.hiddenInterceptDependencyListsModeDebug = false;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect) && useEffectOrigin;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) && useLayoutEffectOrigin;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect) && useInsertionEffectOrigin;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle) = (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle) && useImperativeHandleOrigin;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo) = (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo) && useMemoOrigin;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback) = (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback) && useCallbackOrigin;\n        // the following does not make an effect as memo calls happen on module load\n        // so it is always set to memoIntercept\n        (react__WEBPACK_IMPORTED_MODULE_0___default().memo) = (react__WEBPACK_IMPORTED_MODULE_0___default().memo) && memoOrigin;\n    }\n    else {\n        // do not intercept if a hook is not defined in React\n        // otherwise, it will enable 3rd party libs thinking the react runs at version 18\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect) && useEffectIntercept;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) && useLayoutEffectIntercept;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect) = (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) && useInsertionEffectIntercept;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle) = (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle) && useImperativeHandleIntercept;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo) = (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo) && useMemoIntercept;\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback) = (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback) && useCallbackIntercept;\n        // the following does not make an effect as memo calls happen on module load\n        // so it is always set to memoIntercept\n        (react__WEBPACK_IMPORTED_MODULE_0___default().memo) = (react__WEBPACK_IMPORTED_MODULE_0___default().memo) && memoIntercept;\n        if (configuration.interceptDependencyListsMode === 'development'\n            && configuration.isDevelopmentMode) {\n            configuration.hiddenInterceptDependencyListsModeDebug = true;\n        }\n    }\n}\nfunction reconnectDependencies(deps, fromIntercept) {\n    for (var _i = 0, _a = deps || []; _i < _a.length; _i++) {\n        var i = _a[_i];\n        if (i === Object(i)) {\n            var state = i[self];\n            if (state) {\n                if (fromIntercept && configuration.hiddenInterceptDependencyListsModeDebug) {\n                    throw new StateInvalidUsageError(state.path, ErrorId.StateUsedInDependencyList);\n                }\n                state.reconnect();\n            }\n        }\n    }\n    return deps;\n}\nvar useEffectOrigin;\nfunction useHookstateEffect(effect, deps) {\n    reconnectDependencies(deps);\n    return useEffectOrigin(effect, deps);\n}\nfunction useEffectIntercept(effect, deps) {\n    reconnectDependencies(deps, true);\n    return useEffectOrigin(effect, deps);\n}\nvar useLayoutEffectOrigin;\nfunction useHookstateLayoutEffect(effect, deps) {\n    reconnectDependencies(deps);\n    return useLayoutEffectOrigin(effect, deps);\n}\nfunction useLayoutEffectIntercept(effect, deps) {\n    reconnectDependencies(deps, true);\n    return useLayoutEffectOrigin(effect, deps);\n}\nvar useInsertionEffectOrigin;\nfunction useHookstateInsertionEffect(effect, deps) {\n    reconnectDependencies(deps);\n    return useInsertionEffectOrigin(effect, deps);\n}\nfunction useInsertionEffectIntercept(effect, deps) {\n    reconnectDependencies(deps, true);\n    return useInsertionEffectOrigin(effect, deps);\n}\nvar useImperativeHandleOrigin;\nfunction useHookstateImperativeHandle(ref, init, deps) {\n    reconnectDependencies(deps);\n    return useImperativeHandleOrigin(ref, init, deps);\n}\nfunction useImperativeHandleIntercept(ref, init, deps) {\n    reconnectDependencies(deps, true);\n    return useImperativeHandleOrigin(ref, init, deps);\n}\nvar useMemoOrigin;\nfunction useHookstateMemo(factory, deps) {\n    reconnectDependencies(deps);\n    return useMemoOrigin(factory, deps);\n}\nfunction useMemoIntercept(factory, deps) {\n    reconnectDependencies(deps, true);\n    return useMemoOrigin(factory, deps);\n}\nvar useCallbackOrigin;\nfunction useHookstateCallback(callback, deps) {\n    reconnectDependencies(deps);\n    return useCallbackOrigin(callback, deps);\n}\nfunction useCallbackIntercept(callback, deps) {\n    reconnectDependencies(deps, true);\n    return useCallbackOrigin(callback, deps);\n}\nvar memoOrigin;\nfunction hookstateMemo(Component, propsAreEqual) {\n    return memoOrigin(Component, function (prevProps, nextProps) {\n        reconnectDependencies(Object.keys(nextProps).map(function (i) { return nextProps[i]; }));\n        return (propsAreEqual || shallowEqual)(prevProps, nextProps);\n    });\n}\nfunction memoIntercept(Component, propsAreEqual) {\n    return memoOrigin(Component, function (prevProps, nextProps) {\n        reconnectDependencies(Object.keys(nextProps).map(function (i) { return nextProps[i]; }), true);\n        return (propsAreEqual || shallowEqual)(prevProps, nextProps);\n    });\n}\nfunction interceptReactHooks() {\n    if (!useEffectOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect)) {\n        useEffectOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useEffect) = useEffectIntercept;\n    }\n    if (!useLayoutEffectOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect)) {\n        useLayoutEffectOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useLayoutEffect) = useLayoutEffectIntercept;\n    }\n    if (!useInsertionEffectOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect)) {\n        useInsertionEffectOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useInsertionEffect) = useInsertionEffectIntercept;\n    }\n    if (!useImperativeHandleOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle)) {\n        useImperativeHandleOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle) = useImperativeHandleIntercept;\n    }\n    if (!useMemoOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo)) {\n        useMemoOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useMemo) = useMemoIntercept;\n    }\n    if (!useCallbackOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback)) {\n        useCallbackOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().useCallback) = useCallbackIntercept;\n    }\n    if (!memoOrigin && (react__WEBPACK_IMPORTED_MODULE_0___default().memo)) {\n        memoOrigin = (react__WEBPACK_IMPORTED_MODULE_0___default().memo);\n        (react__WEBPACK_IMPORTED_MODULE_0___default().memo) = memoIntercept;\n    }\n}\ninterceptReactHooks(); // TODO defer invoking it until state is created, so the configure had a chance to set it up first\n// Do not try to use useLayoutEffect if DOM not available (SSR)\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffectOrigin : useEffectOrigin;\n\n\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/NWQ1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Page; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/box/box.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/container/container.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/divider/divider.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/center/center.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/spinner/spinner.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/typography/text.mjs\");\n/* harmony import */ var _components_MagicTable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/MagicTable */ \"(app-pages-browser)/./src/components/MagicTable.tsx\");\n/* harmony import */ var _components_MagicColumnInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/MagicColumnInput */ \"(app-pages-browser)/./src/components/MagicColumnInput.tsx\");\n/* harmony import */ var _components_PeopleModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/PeopleModal */ \"(app-pages-browser)/./src/components/PeopleModal.tsx\");\n/* harmony import */ var _store_MagicColumns_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/MagicColumns.store */ \"(app-pages-browser)/./src/store/MagicColumns.store.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Page() {\n    _s();\n    const toast = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.useToast)({\n        position: \"bottom-right\",\n        duration: 4000,\n        isClosable: true,\n        variant: \"solid\"\n    });\n    const showSuccessToast = function() {\n        let message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"Operation completed successfully\";\n        toast({\n            title: \"Success\",\n            description: message,\n            status: \"success\",\n            containerStyle: {\n                margin: \"16px\",\n                maxWidth: \"380px\"\n            }\n        });\n    };\n    const showErrorToast = (error)=>{\n        toast({\n            title: \"Error\",\n            description: error instanceof Error ? error.message : error,\n            status: \"error\",\n            duration: 5000,\n            containerStyle: {\n                margin: \"16px\",\n                maxWidth: \"380px\"\n            }\n        });\n    };\n    const showWarningToast = (message)=>{\n        toast({\n            title: \"Warning\",\n            description: message,\n            status: \"warning\",\n            containerStyle: {\n                margin: \"16px\",\n                maxWidth: \"380px\"\n            }\n        });\n    };\n    const accountData = (0,_store_MagicColumns_store__WEBPACK_IMPORTED_MODULE_5__.getAccounts)();\n    const [isInitialLoading, setIsInitialLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [loadingQuestion, setLoadingQuestion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [magicColumns, setMagicColumns] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isModalOpen, setIsModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [peopleData, setPeopleData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const isQuestionExists = (newQuestion)=>{\n        return magicColumns.some((col)=>col.question.toLowerCase() === newQuestion.toLowerCase());\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        accountData.fetchData();\n    }, []);\n    const handleNewQuestion = async (question)=>{\n        if (isQuestionExists(question)) {\n            showWarningToast(\"This question has already been asked\");\n            return;\n        }\n        setIsLoading(true);\n        setLoadingQuestion(question);\n        const answerKey = question + \" (Answer)\";\n        const reasonKey = question + \" (Reasoning)\";\n        const loadingData = data.map((item)=>({\n                ...item,\n                [answerKey]: \"...\",\n                [reasonKey]: \"Analyzing...\"\n            }));\n        setData(loadingData);\n        setMagicColumns((prev)=>[\n                ...prev,\n                {\n                    question,\n                    answerKey,\n                    reasonKey\n                }\n            ]);\n        try {\n            const res = await fetch(\"http://localhost:8000/magic/question?question=\" + encodeURIComponent(question));\n            if (!res.ok) {\n                let errorMessage = \"Failed to process your question\";\n                try {\n                    const errorData = await res.json();\n                    errorMessage = errorData.message || errorData.error || errorMessage;\n                } catch (e) {\n                    errorMessage = res.statusText || errorMessage;\n                }\n                throw new Error(errorMessage);\n            }\n            const response = await res.json();\n            if (response.error) {\n                throw new Error(response.error);\n            }\n            if (!response.data || !Array.isArray(response.data)) {\n                throw new Error(\"Invalid response format from server\");\n            }\n            const enriched = data.map((item)=>{\n                const found = response.data.find((r)=>r.Name === item.Name);\n                if (!found) {\n                    return {\n                        ...item,\n                        [answerKey]: \"No data\",\n                        [reasonKey]: \"Unable to analyze\"\n                    };\n                }\n                var _found_answer, _found_reasoning;\n                return {\n                    ...item,\n                    [answerKey]: (_found_answer = found.answer) !== null && _found_answer !== void 0 ? _found_answer : \"—\",\n                    [reasonKey]: (_found_reasoning = found.reasoning) !== null && _found_reasoning !== void 0 ? _found_reasoning : \"—\"\n                };\n            });\n            setData(enriched);\n            showSuccessToast();\n        } catch (error) {\n            console.error(\"Error processing question:\", error);\n            setMagicColumns((prev)=>prev.filter((col)=>col.question !== question));\n            setData((prev)=>prev.map((item)=>{\n                    const { [answerKey]: _, [reasonKey]: __, ...rest } = item;\n                    return rest;\n                }));\n            showErrorToast(error instanceof Error ? error.message : \"An unexpected error occurred\");\n        } finally{\n            setIsLoading(false);\n            setLoadingQuestion(\"\");\n        }\n    };\n    const handleOnRowClick = async ()=>{\n        try {\n            const res = await fetch(\"http://localhost:8000/people\");\n            if (!res.ok) {\n                throw new Error(\"Failed to fetch people data\");\n            }\n            const data = await res.json();\n            setPeopleData(data);\n            setIsModalOpen(true);\n        } catch (error) {\n            console.error(\"Error fetching people:\", error);\n            toast({\n                title: \"Error\",\n                description: \"Failed to fetch people data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true\n            });\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Box, {\n                bg: \"gray.50\",\n                minH: \"100vh\",\n                py: 8,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Container, {\n                    maxW: \"7xl\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.VStack, {\n                        spacing: 6,\n                        align: \"stretch\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Box, {\n                                bg: \"white\",\n                                p: 6,\n                                borderRadius: \"lg\",\n                                boxShadow: \"sm\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.VStack, {\n                                    align: \"stretch\",\n                                    spacing: 4,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.HStack, {\n                                            justify: \"space-between\",\n                                            align: \"center\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.VStack, {\n                                                align: \"start\",\n                                                spacing: 1,\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.Heading, {\n                                                    size: \"lg\",\n                                                    color: \"gray.800\",\n                                                    children: \"Magic Columns ✨\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                                    lineNumber: 221,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                                lineNumber: 220,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                            lineNumber: 219,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.Divider, {}, void 0, false, {\n                                            fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                            lineNumber: 226,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MagicColumnInput__WEBPACK_IMPORTED_MODULE_3__.MagicColumnInput, {\n                                            onAsk: handleNewQuestion,\n                                            isDisabled: isInitialLoading,\n                                            isLoading: isLoading,\n                                            loadingQuestion: loadingQuestion\n                                        }, void 0, false, {\n                                            fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                            lineNumber: 227,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                    lineNumber: 218,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                lineNumber: 217,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Box, {\n                                bg: \"white\",\n                                borderRadius: \"lg\",\n                                boxShadow: \"sm\",\n                                overflow: \"hidden\",\n                                children: isInitialLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Box, {\n                                    p: 8,\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_13__.Center, {\n                                        flexDirection: \"column\",\n                                        gap: 4,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Spinner, {\n                                                size: \"xl\",\n                                                color: \"blue.500\",\n                                                thickness: \"4px\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                                lineNumber: 240,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.Text, {\n                                                color: \"gray.600\",\n                                                children: \"Loading data...\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                                lineNumber: 241,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                        lineNumber: 239,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                    lineNumber: 238,\n                                    columnNumber: 17\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MagicTable__WEBPACK_IMPORTED_MODULE_2__.MagicTable, {\n                                    data: data,\n                                    magicColumns: magicColumns,\n                                    onRowClick: handleOnRowClick\n                                }, void 0, false, {\n                                    fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                    lineNumber: 245,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                        lineNumber: 216,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                    lineNumber: 215,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                lineNumber: 214,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PeopleModal__WEBPACK_IMPORTED_MODULE_4__.PeopleModal, {\n                isModalOpen: isModalOpen,\n                onClose: ()=>setIsModalOpen(false),\n                peopleData: peopleData\n            }, void 0, false, {\n                fileName: \"/Users/chadmiyar/Desktop/full-magic-columns/src/app/page.tsx\",\n                lineNumber: 255,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(Page, \"nGP7B58gf7UIRrF0fXeODWyjzPo=\", false, function() {\n    return [\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.useToast\n    ];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/store/MagicColumns.store.ts":
/*!*****************************************!*\
  !*** ./src/store/MagicColumns.store.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccounts: function() { return /* binding */ getAccounts; }\n/* harmony export */ });\n/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hookstate/core */ \"(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js\");\n\nconst accountsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\"\n});\nconst getAccounts = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(accountsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async ()=>{\n            try {\n                const res = await fetch(\"http://localhost:8000/accounts\");\n                if (!res.ok) {\n                    throw new Error(\"Failed to fetch initial data\");\n                }\n                const data = await res.json();\n                state.data.set(data);\n            } catch (error) {\n                state.errorMessage.set(\"Failed to load initial data. Please refresh the page.\");\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get()\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFFMUQsTUFBTUUsdUJBQXVCRiwwREFBU0EsQ0FBQztJQUNyQ0csTUFBTSxFQUFFO0lBQ1JDLFdBQVc7SUFDWEMsY0FBYztBQUNoQjtBQUVPLE1BQU1DLGNBQWM7SUFDekIsTUFBTUMsUUFBUU4sNkRBQVlBLENBQUNDO0lBQzNCLE9BQU87UUFDTE0sU0FBU0QsTUFBTUgsU0FBUyxDQUFDSyxHQUFHO1FBQzVCQyxXQUFXO1lBQ1QsSUFBSTtnQkFDRixNQUFNQyxNQUFNLE1BQU1DLE1BQU07Z0JBQ3hCLElBQUksQ0FBQ0QsSUFBSUUsRUFBRSxFQUFFO29CQUNYLE1BQU0sSUFBSUMsTUFBTTtnQkFDbEI7Z0JBQ0EsTUFBTVgsT0FBTyxNQUFNUSxJQUFJSSxJQUFJO2dCQUMzQlIsTUFBTUosSUFBSSxDQUFDYSxHQUFHLENBQUNiO1lBQ2pCLEVBQUUsT0FBT2MsT0FBTztnQkFDZFYsTUFBTUYsWUFBWSxDQUFDVyxHQUFHLENBQ3BCO1lBRUo7UUFDRjtRQUNBRSxTQUFTLElBQU1YLE1BQU1KLElBQUksQ0FBQ00sR0FBRyxDQUFDO2dCQUFFVSxTQUFTO1lBQUs7UUFDOUNDLGlCQUFpQixJQUFNYixNQUFNRixZQUFZLENBQUNJLEdBQUc7SUFDL0M7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHM/N2RmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rc3RhdGUsIHVzZUhvb2tzdGF0ZSB9IGZyb20gXCJAaG9va3N0YXRlL2NvcmVcIjtcblxuY29uc3QgYWNjb3VudHNJbml0aWFsU3RhdGUgPSBob29rc3RhdGUoe1xuICBkYXRhOiBbXSxcbiAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgZXJyb3JNZXNzYWdlOiBcIlwiLFxufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRBY2NvdW50cyA9ICgpID0+IHtcbiAgY29uc3Qgc3RhdGUgPSB1c2VIb29rc3RhdGUoYWNjb3VudHNJbml0aWFsU3RhdGUpO1xuICByZXR1cm4ge1xuICAgIGxvYWRpbmc6IHN0YXRlLmlzTG9hZGluZy5nZXQoKSxcbiAgICBmZXRjaERhdGE6IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FjY291bnRzXCIpO1xuICAgICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBpbml0aWFsIGRhdGFcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgIHN0YXRlLmRhdGEuc2V0KGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgc3RhdGUuZXJyb3JNZXNzYWdlLnNldChcbiAgICAgICAgICBcIkZhaWxlZCB0byBsb2FkIGluaXRpYWwgZGF0YS4gUGxlYXNlIHJlZnJlc2ggdGhlIHBhZ2UuXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldERhdGE6ICgpID0+IHN0YXRlLmRhdGEuZ2V0KHsgbm9wcm94eTogdHJ1ZSB9KSxcbiAgICBnZXRFcnJvck1lc3NhZ2U6ICgpID0+IHN0YXRlLmVycm9yTWVzc2FnZS5nZXQoKSxcbiAgfTtcbn07XG4iXSwibmFtZXMiOlsiaG9va3N0YXRlIiwidXNlSG9va3N0YXRlIiwiYWNjb3VudHNJbml0aWFsU3RhdGUiLCJkYXRhIiwiaXNMb2FkaW5nIiwiZXJyb3JNZXNzYWdlIiwiZ2V0QWNjb3VudHMiLCJzdGF0ZSIsImxvYWRpbmciLCJnZXQiLCJmZXRjaERhdGEiLCJyZXMiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwic2V0IiwiZXJyb3IiLCJnZXREYXRhIiwibm9wcm94eSIsImdldEVycm9yTWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/MagicColumns.store.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz8wM2U4Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ })

});