"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/MagicColumns.store.ts":
/*!*****************************************!*\
  !*** ./src/store/MagicColumns.store.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccounts: function() { return /* binding */ getAccounts; }\n/* harmony export */ });\n/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hookstate/core */ \"(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js\");\n\nconst accountsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\"\n});\nconst getAccounts = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(accountsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async ()=>{\n            state.isLoading.set(true);\n            try {\n                const res = await fetch(\"http://localhost:8000/accounts\");\n                if (!res.ok) {\n                    throw new Error(\"Failed to fetch initial data\");\n                }\n                const data = await res.json();\n                state.data.set(data);\n            } catch (error) {\n                state.errorMessage.set(\"Failed to load initial data. Please refresh the page.\");\n            } finally{\n                state.isLoading.set(false);\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get()\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFFMUQsTUFBTUUsdUJBQXVCRiwwREFBU0EsQ0FBQztJQUNyQ0csTUFBTSxFQUFFO0lBQ1JDLFdBQVc7SUFDWEMsY0FBYztBQUNoQjtBQUVPLE1BQU1DLGNBQWM7SUFDekIsTUFBTUMsUUFBUU4sNkRBQVlBLENBQUNDO0lBQzNCLE9BQU87UUFDTE0sU0FBU0QsTUFBTUgsU0FBUyxDQUFDSyxHQUFHO1FBQzVCQyxXQUFXO1lBQ1RILE1BQU1ILFNBQVMsQ0FBQ08sR0FBRyxDQUFDO1lBQ3BCLElBQUk7Z0JBQ0YsTUFBTUMsTUFBTSxNQUFNQyxNQUFNO2dCQUN4QixJQUFJLENBQUNELElBQUlFLEVBQUUsRUFBRTtvQkFDWCxNQUFNLElBQUlDLE1BQU07Z0JBQ2xCO2dCQUNBLE1BQU1aLE9BQU8sTUFBTVMsSUFBSUksSUFBSTtnQkFDM0JULE1BQU1KLElBQUksQ0FBQ1EsR0FBRyxDQUFDUjtZQUNqQixFQUFFLE9BQU9jLE9BQU87Z0JBQ2RWLE1BQU1GLFlBQVksQ0FBQ00sR0FBRyxDQUNwQjtZQUVKLFNBQVU7Z0JBQ1JKLE1BQU1ILFNBQVMsQ0FBQ08sR0FBRyxDQUFDO1lBQ3RCO1FBQ0Y7UUFDQU8sU0FBUyxJQUFNWCxNQUFNSixJQUFJLENBQUNNLEdBQUcsQ0FBQztnQkFBRVUsU0FBUztZQUFLO1FBQzlDQyxpQkFBaUIsSUFBTWIsTUFBTUYsWUFBWSxDQUFDSSxHQUFHO0lBQy9DO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3RvcmUvTWFnaWNDb2x1bW5zLnN0b3JlLnRzPzdkZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3N0YXRlLCB1c2VIb29rc3RhdGUgfSBmcm9tIFwiQGhvb2tzdGF0ZS9jb3JlXCI7XG5cbmNvbnN0IGFjY291bnRzSW5pdGlhbFN0YXRlID0gaG9va3N0YXRlKHtcbiAgZGF0YTogW10sXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGVycm9yTWVzc2FnZTogXCJcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0QWNjb3VudHMgPSAoKSA9PiB7XG4gIGNvbnN0IHN0YXRlID0gdXNlSG9va3N0YXRlKGFjY291bnRzSW5pdGlhbFN0YXRlKTtcbiAgcmV0dXJuIHtcbiAgICBsb2FkaW5nOiBzdGF0ZS5pc0xvYWRpbmcuZ2V0KCksXG4gICAgZmV0Y2hEYXRhOiBhc3luYyAoKSA9PiB7XG4gICAgICBzdGF0ZS5pc0xvYWRpbmcuc2V0KHRydWUpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYWNjb3VudHNcIik7XG4gICAgICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGluaXRpYWwgZGF0YVwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgc3RhdGUuZGF0YS5zZXQoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2Uuc2V0KFxuICAgICAgICAgIFwiRmFpbGVkIHRvIGxvYWQgaW5pdGlhbCBkYXRhLiBQbGVhc2UgcmVmcmVzaCB0aGUgcGFnZS5cIlxuICAgICAgICApO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nLnNldChmYWxzZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXREYXRhOiAoKSA9PiBzdGF0ZS5kYXRhLmdldCh7IG5vcHJveHk6IHRydWUgfSksXG4gICAgZ2V0RXJyb3JNZXNzYWdlOiAoKSA9PiBzdGF0ZS5lcnJvck1lc3NhZ2UuZ2V0KCksXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbImhvb2tzdGF0ZSIsInVzZUhvb2tzdGF0ZSIsImFjY291bnRzSW5pdGlhbFN0YXRlIiwiZGF0YSIsImlzTG9hZGluZyIsImVycm9yTWVzc2FnZSIsImdldEFjY291bnRzIiwic3RhdGUiLCJsb2FkaW5nIiwiZ2V0IiwiZmV0Y2hEYXRhIiwic2V0IiwicmVzIiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiIsImVycm9yIiwiZ2V0RGF0YSIsIm5vcHJveHkiLCJnZXRFcnJvck1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/MagicColumns.store.ts\n"));

/***/ })

});