"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/MagicColumns.store.ts":
/*!*****************************************!*\
  !*** ./src/store/MagicColumns.store.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccounts: function() { return /* binding */ getAccounts; },\n/* harmony export */   getMagicColumns: function() { return /* binding */ getMagicColumns; }\n/* harmony export */ });\n/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hookstate/core */ \"(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js\");\n\nconst accountsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\"\n});\nconst getAccounts = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(accountsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async ()=>{\n            if (!state.isLoading.get()) {\n                state.isLoading.set(true);\n                try {\n                    const res = await fetch(\"http://localhost:8000/accounts\");\n                    if (!res.ok) {\n                        throw new Error(\"Failed to fetch initial data\");\n                    }\n                    const data = await res.json();\n                    state.data.set(data);\n                } catch (error) {\n                    state.errorMessage.set(\"Failed to load initial data. Please refresh the page.\");\n                } finally{\n                    state.isLoading.set(false);\n                }\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get()\n    };\n};\nconst magicColumnsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\"\n});\nconst getMagicColumns = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(magicColumnsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async (question)=>{\n            if (!state.isLoading.get()) {\n                state.errorMessage.set(\"\");\n                state.isLoading.set(true);\n                try {\n                    const res = await fetch(\"http://localhost:8000/magic/question?question=\".concat(question));\n                    const data = await res.json();\n                    if (data === null || data === void 0 ? void 0 : data.error) {\n                        state.errorMessage.set(\"Failed to process your question\");\n                    } else {\n                        state.data.set(data.data);\n                    }\n                } catch (error) {\n                    state.errorMessage.set(\"Failed to process your question\");\n                } finally{\n                    state.isLoading.set(false);\n                }\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get()\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBEO0FBRTFELE1BQU1FLHVCQUF1QkYsMERBQVNBLENBQUM7SUFDckNHLE1BQU0sRUFBRTtJQUNSQyxXQUFXO0lBQ1hDLGNBQWM7QUFDaEI7QUFFTyxNQUFNQyxjQUFjO0lBQ3pCLE1BQU1DLFFBQVFOLDZEQUFZQSxDQUFDQztJQUMzQixPQUFPO1FBQ0xNLFNBQVNELE1BQU1ILFNBQVMsQ0FBQ0ssR0FBRztRQUM1QkMsV0FBVztZQUNULElBQUksQ0FBQ0gsTUFBTUgsU0FBUyxDQUFDSyxHQUFHLElBQUk7Z0JBQzFCRixNQUFNSCxTQUFTLENBQUNPLEdBQUcsQ0FBQztnQkFDcEIsSUFBSTtvQkFDRixNQUFNQyxNQUFNLE1BQU1DLE1BQU07b0JBQ3hCLElBQUksQ0FBQ0QsSUFBSUUsRUFBRSxFQUFFO3dCQUNYLE1BQU0sSUFBSUMsTUFBTTtvQkFDbEI7b0JBQ0EsTUFBTVosT0FBTyxNQUFNUyxJQUFJSSxJQUFJO29CQUMzQlQsTUFBTUosSUFBSSxDQUFDUSxHQUFHLENBQUNSO2dCQUNqQixFQUFFLE9BQU9jLE9BQU87b0JBQ2RWLE1BQU1GLFlBQVksQ0FBQ00sR0FBRyxDQUNwQjtnQkFFSixTQUFVO29CQUNSSixNQUFNSCxTQUFTLENBQUNPLEdBQUcsQ0FBQztnQkFDdEI7WUFDRjtRQUNGO1FBQ0FPLFNBQVMsSUFBTVgsTUFBTUosSUFBSSxDQUFDTSxHQUFHLENBQUM7Z0JBQUVVLFNBQVM7WUFBSztRQUM5Q0MsaUJBQWlCLElBQU1iLE1BQU1GLFlBQVksQ0FBQ0ksR0FBRztJQUMvQztBQUNGLEVBQUU7QUFFRixNQUFNWSwyQkFBMkJyQiwwREFBU0EsQ0FBQztJQUN6Q0csTUFBTSxFQUFFO0lBQ1JDLFdBQVc7SUFDWEMsY0FBYztBQUNoQjtBQUVPLE1BQU1pQixrQkFBa0I7SUFDN0IsTUFBTWYsUUFBUU4sNkRBQVlBLENBQUNvQjtJQUMzQixPQUFPO1FBQ0xiLFNBQVNELE1BQU1ILFNBQVMsQ0FBQ0ssR0FBRztRQUM1QkMsV0FBVyxPQUFPYTtZQUNoQixJQUFJLENBQUNoQixNQUFNSCxTQUFTLENBQUNLLEdBQUcsSUFBSTtnQkFDMUJGLE1BQU1GLFlBQVksQ0FBQ00sR0FBRyxDQUFDO2dCQUN2QkosTUFBTUgsU0FBUyxDQUFDTyxHQUFHLENBQUM7Z0JBQ3BCLElBQUk7b0JBQ0YsTUFBTUMsTUFBTSxNQUFNQyxNQUNoQixpREFBMEQsT0FBVFU7b0JBRW5ELE1BQU1wQixPQUFPLE1BQU1TLElBQUlJLElBQUk7b0JBQzNCLElBQUliLGlCQUFBQSwyQkFBQUEsS0FBTWMsS0FBSyxFQUFFO3dCQUNmVixNQUFNRixZQUFZLENBQUNNLEdBQUcsQ0FBQztvQkFDekIsT0FBTzt3QkFDTEosTUFBTUosSUFBSSxDQUFDUSxHQUFHLENBQUNSLEtBQUtBLElBQUk7b0JBQzFCO2dCQUNGLEVBQUUsT0FBT2MsT0FBTztvQkFDZFYsTUFBTUYsWUFBWSxDQUFDTSxHQUFHLENBQUM7Z0JBQ3pCLFNBQVU7b0JBQ1JKLE1BQU1ILFNBQVMsQ0FBQ08sR0FBRyxDQUFDO2dCQUN0QjtZQUNGO1FBQ0Y7UUFDQU8sU0FBUyxJQUFNWCxNQUFNSixJQUFJLENBQUNNLEdBQUcsQ0FBQztnQkFBRVUsU0FBUztZQUFLO1FBQzlDQyxpQkFBaUIsSUFBTWIsTUFBTUYsWUFBWSxDQUFDSSxHQUFHO0lBQy9DO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3RvcmUvTWFnaWNDb2x1bW5zLnN0b3JlLnRzPzdkZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3N0YXRlLCB1c2VIb29rc3RhdGUgfSBmcm9tIFwiQGhvb2tzdGF0ZS9jb3JlXCI7XG5cbmNvbnN0IGFjY291bnRzSW5pdGlhbFN0YXRlID0gaG9va3N0YXRlKHtcbiAgZGF0YTogW10sXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGVycm9yTWVzc2FnZTogXCJcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0QWNjb3VudHMgPSAoKSA9PiB7XG4gIGNvbnN0IHN0YXRlID0gdXNlSG9va3N0YXRlKGFjY291bnRzSW5pdGlhbFN0YXRlKTtcbiAgcmV0dXJuIHtcbiAgICBsb2FkaW5nOiBzdGF0ZS5pc0xvYWRpbmcuZ2V0KCksXG4gICAgZmV0Y2hEYXRhOiBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAoIXN0YXRlLmlzTG9hZGluZy5nZXQoKSkge1xuICAgICAgICBzdGF0ZS5pc0xvYWRpbmcuc2V0KHRydWUpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FjY291bnRzXCIpO1xuICAgICAgICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggaW5pdGlhbCBkYXRhXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICBzdGF0ZS5kYXRhLnNldChkYXRhKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2Uuc2V0KFxuICAgICAgICAgICAgXCJGYWlsZWQgdG8gbG9hZCBpbml0aWFsIGRhdGEuIFBsZWFzZSByZWZyZXNoIHRoZSBwYWdlLlwiXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBzdGF0ZS5pc0xvYWRpbmcuc2V0KGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RGF0YTogKCkgPT4gc3RhdGUuZGF0YS5nZXQoeyBub3Byb3h5OiB0cnVlIH0pLFxuICAgIGdldEVycm9yTWVzc2FnZTogKCkgPT4gc3RhdGUuZXJyb3JNZXNzYWdlLmdldCgpLFxuICB9O1xufTtcblxuY29uc3QgbWFnaWNDb2x1bW5zSW5pdGlhbFN0YXRlID0gaG9va3N0YXRlKHtcbiAgZGF0YTogW10sXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGVycm9yTWVzc2FnZTogXCJcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0TWFnaWNDb2x1bW5zID0gKCkgPT4ge1xuICBjb25zdCBzdGF0ZSA9IHVzZUhvb2tzdGF0ZShtYWdpY0NvbHVtbnNJbml0aWFsU3RhdGUpO1xuICByZXR1cm4ge1xuICAgIGxvYWRpbmc6IHN0YXRlLmlzTG9hZGluZy5nZXQoKSxcbiAgICBmZXRjaERhdGE6IGFzeW5jIChxdWVzdGlvbjogc3RyaW5nKSA9PiB7XG4gICAgICBpZiAoIXN0YXRlLmlzTG9hZGluZy5nZXQoKSkge1xuICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2Uuc2V0KFwiXCIpO1xuICAgICAgICBzdGF0ZS5pc0xvYWRpbmcuc2V0KHRydWUpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9tYWdpYy9xdWVzdGlvbj9xdWVzdGlvbj0ke3F1ZXN0aW9ufWBcbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgICAgIGlmIChkYXRhPy5lcnJvcikge1xuICAgICAgICAgICAgc3RhdGUuZXJyb3JNZXNzYWdlLnNldChcIkZhaWxlZCB0byBwcm9jZXNzIHlvdXIgcXVlc3Rpb25cIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0YXRlLmRhdGEuc2V0KGRhdGEuZGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIHN0YXRlLmVycm9yTWVzc2FnZS5zZXQoXCJGYWlsZWQgdG8gcHJvY2VzcyB5b3VyIHF1ZXN0aW9uXCIpO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIHN0YXRlLmlzTG9hZGluZy5zZXQoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXREYXRhOiAoKSA9PiBzdGF0ZS5kYXRhLmdldCh7IG5vcHJveHk6IHRydWUgfSksXG4gICAgZ2V0RXJyb3JNZXNzYWdlOiAoKSA9PiBzdGF0ZS5lcnJvck1lc3NhZ2UuZ2V0KCksXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbImhvb2tzdGF0ZSIsInVzZUhvb2tzdGF0ZSIsImFjY291bnRzSW5pdGlhbFN0YXRlIiwiZGF0YSIsImlzTG9hZGluZyIsImVycm9yTWVzc2FnZSIsImdldEFjY291bnRzIiwic3RhdGUiLCJsb2FkaW5nIiwiZ2V0IiwiZmV0Y2hEYXRhIiwic2V0IiwicmVzIiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiIsImVycm9yIiwiZ2V0RGF0YSIsIm5vcHJveHkiLCJnZXRFcnJvck1lc3NhZ2UiLCJtYWdpY0NvbHVtbnNJbml0aWFsU3RhdGUiLCJnZXRNYWdpY0NvbHVtbnMiLCJxdWVzdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/MagicColumns.store.ts\n"));

/***/ })

});