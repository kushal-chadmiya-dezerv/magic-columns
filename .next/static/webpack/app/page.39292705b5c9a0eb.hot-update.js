"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/MagicColumns.store.ts":
/*!*****************************************!*\
  !*** ./src/store/MagicColumns.store.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccounts: function() { return /* binding */ getAccounts; },\n/* harmony export */   getMagicColumns: function() { return /* binding */ getMagicColumns; }\n/* harmony export */ });\n/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hookstate/core */ \"(app-pages-browser)/./node_modules/@hookstate/core/dist/index.es.js\");\n\nconst accountsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\",\n    filters: {\n        name: undefined,\n        funding_stage: undefined,\n        min_employees: undefined,\n        max_employees: undefined\n    }\n});\nconst getAccounts = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(accountsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async (filters)=>{\n            if (!state.isLoading.get()) {\n                state.isLoading.set(true);\n                try {\n                    const queryParams = new URLSearchParams();\n                    if (filters) {\n                        Object.entries(filters).forEach((param)=>{\n                            let [key, value] = param;\n                            if (value !== undefined) {\n                                queryParams.append(key, value.toString());\n                            }\n                        });\n                    }\n                    const url = \"http://localhost:8000/accounts?\".concat(queryParams.toString());\n                    const res = await fetch(url);\n                    if (!res.ok) {\n                        throw new Error(\"Failed to fetch data\");\n                    }\n                    const data = await res.json();\n                    state.data.set(data);\n                } catch (error) {\n                    state.errorMessage.set(\"Failed to load data. Please refresh the page.\");\n                } finally{\n                    state.isLoading.set(false);\n                }\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get(),\n        setFilters: (filters)=>{\n            state.filters.set(filters);\n        },\n        getFilters: ()=>state.filters.get({\n                noproxy: true\n            })\n    };\n};\nconst magicColumnsInitialState = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.hookstate)({\n    data: [],\n    isLoading: false,\n    errorMessage: \"\"\n});\nconst getMagicColumns = ()=>{\n    const state = (0,_hookstate_core__WEBPACK_IMPORTED_MODULE_0__.useHookstate)(magicColumnsInitialState);\n    return {\n        loading: state.isLoading.get(),\n        fetchData: async (question)=>{\n            if (!state.isLoading.get()) {\n                state.errorMessage.set(\"\");\n                state.isLoading.set(true);\n                try {\n                    const res = await fetch(\"http://localhost:8000/magic/question?question=\".concat(question));\n                    const data = await res.json();\n                    if (data === null || data === void 0 ? void 0 : data.error) {\n                        state.errorMessage.set(\"Failed to process your question\");\n                    } else {\n                        state.data.set(data.data);\n                    }\n                } catch (error) {\n                    state.errorMessage.set(\"Failed to process your question\");\n                } finally{\n                    state.isLoading.set(false);\n                }\n            }\n        },\n        getData: ()=>state.data.get({\n                noproxy: true\n            }),\n        getErrorMessage: ()=>state.errorMessage.get()\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBTzBEO0FBRTFELE1BQU1FLHVCQUF1QkYsMERBQVNBLENBQUM7SUFDckNHLE1BQU0sRUFBRTtJQUNSQyxXQUFXO0lBQ1hDLGNBQWM7SUFDZEMsU0FBUztRQUNQQyxNQUFNQztRQUNOQyxlQUFlRDtRQUNmRSxlQUFlRjtRQUNmRyxlQUFlSDtJQUNqQjtBQUNGO0FBRU8sTUFBTUksY0FBYztJQUN6QixNQUFNQyxRQUFRWiw2REFBWUEsQ0FBQ0M7SUFDM0IsT0FBTztRQUNMWSxTQUFTRCxNQUFNVCxTQUFTLENBQUNXLEdBQUc7UUFDNUJDLFdBQVcsT0FBT1Y7WUFDaEIsSUFBSSxDQUFDTyxNQUFNVCxTQUFTLENBQUNXLEdBQUcsSUFBSTtnQkFDMUJGLE1BQU1ULFNBQVMsQ0FBQ2EsR0FBRyxDQUFDO2dCQUNwQixJQUFJO29CQUNGLE1BQU1DLGNBQWMsSUFBSUM7b0JBQ3hCLElBQUliLFNBQVM7d0JBQ1hjLE9BQU9DLE9BQU8sQ0FBQ2YsU0FBU2dCLE9BQU8sQ0FBQztnQ0FBQyxDQUFDQyxLQUFLQyxNQUFNOzRCQUMzQyxJQUFJQSxVQUFVaEIsV0FBVztnQ0FDdkJVLFlBQVlPLE1BQU0sQ0FBQ0YsS0FBS0MsTUFBTUUsUUFBUTs0QkFDeEM7d0JBQ0Y7b0JBQ0Y7b0JBRUEsTUFBTUMsTUFBTSxrQ0FBeUQsT0FBdkJULFlBQVlRLFFBQVE7b0JBQ2xFLE1BQU1FLE1BQU0sTUFBTUMsTUFBTUY7b0JBQ3hCLElBQUksQ0FBQ0MsSUFBSUUsRUFBRSxFQUFFO3dCQUNYLE1BQU0sSUFBSUMsTUFBTTtvQkFDbEI7b0JBQ0EsTUFBTTVCLE9BQU8sTUFBTXlCLElBQUlJLElBQUk7b0JBQzNCbkIsTUFBTVYsSUFBSSxDQUFDYyxHQUFHLENBQUNkO2dCQUNqQixFQUFFLE9BQU84QixPQUFPO29CQUNkcEIsTUFBTVIsWUFBWSxDQUFDWSxHQUFHLENBQ3BCO2dCQUVKLFNBQVU7b0JBQ1JKLE1BQU1ULFNBQVMsQ0FBQ2EsR0FBRyxDQUFDO2dCQUN0QjtZQUNGO1FBQ0Y7UUFDQWlCLFNBQVMsSUFBTXJCLE1BQU1WLElBQUksQ0FBQ1ksR0FBRyxDQUFDO2dCQUFFb0IsU0FBUztZQUFLO1FBQzlDQyxpQkFBaUIsSUFBTXZCLE1BQU1SLFlBQVksQ0FBQ1UsR0FBRztRQUM3Q3NCLFlBQVksQ0FBQy9CO1lBQ1hPLE1BQU1QLE9BQU8sQ0FBQ1csR0FBRyxDQUFDWDtRQUNwQjtRQUNBZ0MsWUFBWSxJQUFNekIsTUFBTVAsT0FBTyxDQUFDUyxHQUFHLENBQUM7Z0JBQUVvQixTQUFTO1lBQUs7SUFDdEQ7QUFDRixFQUFFO0FBRUYsTUFBTUksMkJBQTJCdkMsMERBQVNBLENBQUM7SUFDekNHLE1BQU0sRUFBRTtJQUNSQyxXQUFXO0lBQ1hDLGNBQWM7QUFDaEI7QUFFTyxNQUFNbUMsa0JBQWtCO0lBQzdCLE1BQU0zQixRQUFRWiw2REFBWUEsQ0FBQ3NDO0lBQzNCLE9BQU87UUFDTHpCLFNBQVNELE1BQU1ULFNBQVMsQ0FBQ1csR0FBRztRQUM1QkMsV0FBVyxPQUFPeUI7WUFDaEIsSUFBSSxDQUFDNUIsTUFBTVQsU0FBUyxDQUFDVyxHQUFHLElBQUk7Z0JBQzFCRixNQUFNUixZQUFZLENBQUNZLEdBQUcsQ0FBQztnQkFDdkJKLE1BQU1ULFNBQVMsQ0FBQ2EsR0FBRyxDQUFDO2dCQUNwQixJQUFJO29CQUNGLE1BQU1XLE1BQU0sTUFBTUMsTUFDaEIsaURBQTBELE9BQVRZO29CQUVuRCxNQUFNdEMsT0FBTyxNQUFNeUIsSUFBSUksSUFBSTtvQkFDM0IsSUFBSTdCLGlCQUFBQSwyQkFBQUEsS0FBTThCLEtBQUssRUFBRTt3QkFDZnBCLE1BQU1SLFlBQVksQ0FBQ1ksR0FBRyxDQUFDO29CQUN6QixPQUFPO3dCQUNMSixNQUFNVixJQUFJLENBQUNjLEdBQUcsQ0FBQ2QsS0FBS0EsSUFBSTtvQkFDMUI7Z0JBQ0YsRUFBRSxPQUFPOEIsT0FBTztvQkFDZHBCLE1BQU1SLFlBQVksQ0FBQ1ksR0FBRyxDQUFDO2dCQUN6QixTQUFVO29CQUNSSixNQUFNVCxTQUFTLENBQUNhLEdBQUcsQ0FBQztnQkFDdEI7WUFDRjtRQUNGO1FBQ0FpQixTQUFTLElBQU1yQixNQUFNVixJQUFJLENBQUNZLEdBQUcsQ0FBQztnQkFBRW9CLFNBQVM7WUFBSztRQUM5Q0MsaUJBQWlCLElBQU12QixNQUFNUixZQUFZLENBQUNVLEdBQUc7SUFDL0M7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZS9NYWdpY0NvbHVtbnMuc3RvcmUudHM/N2RmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgRmlsdGVyUGFyYW1zIHtcbiAgbmFtZT86IHN0cmluZztcbiAgZnVuZGluZ19zdGFnZT86IHN0cmluZztcbiAgbWluX2VtcGxveWVlcz86IG51bWJlcjtcbiAgbWF4X2VtcGxveWVlcz86IG51bWJlcjtcbn1cblxuaW1wb3J0IHsgaG9va3N0YXRlLCB1c2VIb29rc3RhdGUgfSBmcm9tIFwiQGhvb2tzdGF0ZS9jb3JlXCI7XG5cbmNvbnN0IGFjY291bnRzSW5pdGlhbFN0YXRlID0gaG9va3N0YXRlKHtcbiAgZGF0YTogW10sXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGVycm9yTWVzc2FnZTogXCJcIixcbiAgZmlsdGVyczoge1xuICAgIG5hbWU6IHVuZGVmaW5lZCxcbiAgICBmdW5kaW5nX3N0YWdlOiB1bmRlZmluZWQsXG4gICAgbWluX2VtcGxveWVlczogdW5kZWZpbmVkLFxuICAgIG1heF9lbXBsb3llZXM6IHVuZGVmaW5lZCxcbiAgfSBhcyBGaWx0ZXJQYXJhbXMsXG59KTtcblxuZXhwb3J0IGNvbnN0IGdldEFjY291bnRzID0gKCkgPT4ge1xuICBjb25zdCBzdGF0ZSA9IHVzZUhvb2tzdGF0ZShhY2NvdW50c0luaXRpYWxTdGF0ZSk7XG4gIHJldHVybiB7XG4gICAgbG9hZGluZzogc3RhdGUuaXNMb2FkaW5nLmdldCgpLFxuICAgIGZldGNoRGF0YTogYXN5bmMgKGZpbHRlcnM/OiBGaWx0ZXJQYXJhbXMpID0+IHtcbiAgICAgIGlmICghc3RhdGUuaXNMb2FkaW5nLmdldCgpKSB7XG4gICAgICAgIHN0YXRlLmlzTG9hZGluZy5zZXQodHJ1ZSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgICAgICAgaWYgKGZpbHRlcnMpIHtcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGZpbHRlcnMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zLmFwcGVuZChrZXksIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FjY291bnRzPyR7cXVlcnlQYXJhbXMudG9TdHJpbmcoKX1gO1xuICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBkYXRhXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICBzdGF0ZS5kYXRhLnNldChkYXRhKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2Uuc2V0KFxuICAgICAgICAgICAgXCJGYWlsZWQgdG8gbG9hZCBkYXRhLiBQbGVhc2UgcmVmcmVzaCB0aGUgcGFnZS5cIlxuICAgICAgICAgICk7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgc3RhdGUuaXNMb2FkaW5nLnNldChmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGdldERhdGE6ICgpID0+IHN0YXRlLmRhdGEuZ2V0KHsgbm9wcm94eTogdHJ1ZSB9KSxcbiAgICBnZXRFcnJvck1lc3NhZ2U6ICgpID0+IHN0YXRlLmVycm9yTWVzc2FnZS5nZXQoKSxcbiAgICBzZXRGaWx0ZXJzOiAoZmlsdGVyczogRmlsdGVyUGFyYW1zKSA9PiB7XG4gICAgICBzdGF0ZS5maWx0ZXJzLnNldChmaWx0ZXJzKTtcbiAgICB9LFxuICAgIGdldEZpbHRlcnM6ICgpID0+IHN0YXRlLmZpbHRlcnMuZ2V0KHsgbm9wcm94eTogdHJ1ZSB9KSxcbiAgfTtcbn07XG5cbmNvbnN0IG1hZ2ljQ29sdW1uc0luaXRpYWxTdGF0ZSA9IGhvb2tzdGF0ZSh7XG4gIGRhdGE6IFtdLFxuICBpc0xvYWRpbmc6IGZhbHNlLFxuICBlcnJvck1lc3NhZ2U6IFwiXCIsXG59KTtcblxuZXhwb3J0IGNvbnN0IGdldE1hZ2ljQ29sdW1ucyA9ICgpID0+IHtcbiAgY29uc3Qgc3RhdGUgPSB1c2VIb29rc3RhdGUobWFnaWNDb2x1bW5zSW5pdGlhbFN0YXRlKTtcbiAgcmV0dXJuIHtcbiAgICBsb2FkaW5nOiBzdGF0ZS5pc0xvYWRpbmcuZ2V0KCksXG4gICAgZmV0Y2hEYXRhOiBhc3luYyAocXVlc3Rpb246IHN0cmluZykgPT4ge1xuICAgICAgaWYgKCFzdGF0ZS5pc0xvYWRpbmcuZ2V0KCkpIHtcbiAgICAgICAgc3RhdGUuZXJyb3JNZXNzYWdlLnNldChcIlwiKTtcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nLnNldCh0cnVlKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgIGBodHRwOi8vbG9jYWxob3N0OjgwMDAvbWFnaWMvcXVlc3Rpb24/cXVlc3Rpb249JHtxdWVzdGlvbn1gXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICBpZiAoZGF0YT8uZXJyb3IpIHtcbiAgICAgICAgICAgIHN0YXRlLmVycm9yTWVzc2FnZS5zZXQoXCJGYWlsZWQgdG8gcHJvY2VzcyB5b3VyIHF1ZXN0aW9uXCIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdGF0ZS5kYXRhLnNldChkYXRhLmRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2Uuc2V0KFwiRmFpbGVkIHRvIHByb2Nlc3MgeW91ciBxdWVzdGlvblwiKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBzdGF0ZS5pc0xvYWRpbmcuc2V0KGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RGF0YTogKCkgPT4gc3RhdGUuZGF0YS5nZXQoeyBub3Byb3h5OiB0cnVlIH0pLFxuICAgIGdldEVycm9yTWVzc2FnZTogKCkgPT4gc3RhdGUuZXJyb3JNZXNzYWdlLmdldCgpLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJob29rc3RhdGUiLCJ1c2VIb29rc3RhdGUiLCJhY2NvdW50c0luaXRpYWxTdGF0ZSIsImRhdGEiLCJpc0xvYWRpbmciLCJlcnJvck1lc3NhZ2UiLCJmaWx0ZXJzIiwibmFtZSIsInVuZGVmaW5lZCIsImZ1bmRpbmdfc3RhZ2UiLCJtaW5fZW1wbG95ZWVzIiwibWF4X2VtcGxveWVlcyIsImdldEFjY291bnRzIiwic3RhdGUiLCJsb2FkaW5nIiwiZ2V0IiwiZmV0Y2hEYXRhIiwic2V0IiwicXVlcnlQYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJPYmplY3QiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImtleSIsInZhbHVlIiwiYXBwZW5kIiwidG9TdHJpbmciLCJ1cmwiLCJyZXMiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJnZXREYXRhIiwibm9wcm94eSIsImdldEVycm9yTWVzc2FnZSIsInNldEZpbHRlcnMiLCJnZXRGaWx0ZXJzIiwibWFnaWNDb2x1bW5zSW5pdGlhbFN0YXRlIiwiZ2V0TWFnaWNDb2x1bW5zIiwicXVlc3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/MagicColumns.store.ts\n"));

/***/ })

});